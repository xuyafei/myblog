[{"content":"引言 搭建个人博客是展示自己技术积累、分享知识的好方式。本文将详细介绍如何使用 Hugo 静态网站生成器和 GitHub Pages 来构建一个现代化的个人博客。\n技术栈选择 静态网站生成器: Hugo 主题: PaperMod 托管平台: GitHub Pages 自动部署: GitHub Actions 详细步骤 1. 环境准备 首先需要安装以下工具：\nGit Hugo（推荐使用 extended 版本） 对于 macOS 用户，可以使用 Homebrew 安装：\nbrew install hugo 2. 创建 Hugo 站点 # 创建新的 Hugo 站点 hugo new site myblog cd myblog # 初始化 Git 仓库 git init 3. 安装主题 我们选择了 PaperMod 主题，它具有现代的设计风格和丰富的功能：\n# 添加主题作为 git submodule git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 4. 配置网站 在根目录创建 config.yml 文件，配置网站的基本信息：\nbaseURL: \u0026#34;https://[username].github.io/myblog\u0026#34; languageCode: \u0026#34;zh-cn\u0026#34; title: \u0026#34;My Blog\u0026#34; theme: \u0026#34;PaperMod\u0026#34; # 其他重要配置 params: profileMode: enabled: true title: \u0026#34;个人博客\u0026#34; subtitle: \u0026#34;分享技术与生活\u0026#34; # 启用各种功能 ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true ShowWordCount: true 5. 配置 GitHub Pages 部署 在 .github/workflows/hugo.yml 中配置自动部署流程：\nname: Deploy Hugo site to Pages on: push: branches: [\u0026#34;main\u0026#34;] workflow_dispatch: permissions: contents: read pages: write id-token: write jobs: build: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: submodules: recursive - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Build run: hugo --minify - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./public deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4 6. 创建新文章 创建新文章有两种方式：\n使用 Hugo 命令： hugo new posts/my-new-post.md 直接在 content/posts 目录下创建 markdown 文件。 文章头部需要包含以下 front matter：\n--- title: \u0026#34;文章标题\u0026#34; date: 2024-04-07 draft: false tags: [\u0026#34;标签1\u0026#34;, \u0026#34;标签2\u0026#34;] categories: [\u0026#34;分类\u0026#34;] --- 7. 本地预览 在写作过程中，可以使用以下命令启动本地预览：\nhugo server -D 然后访问 http://localhost:1313 查看效果。\n8. 部署流程 提交更改到 Git： git add . git commit -m \u0026#34;Add new post\u0026#34; git push origin main GitHub Actions 会自动触发部署流程 等待几分钟后，访问 https://[username].github.io/myblog 查看更新 博客功能特性 当前博客已配置的主要功能：\n响应式设计 暗黑/明亮主题切换 文章目录（TOC） 阅读时间估算 代码高亮和复制按钮 文章分类和标签系统 文章归档 社交媒体链接 个人简介展示 搜索功能 写作建议 使用 Markdown 语法写作 合理使用标题层级 为文章添加适当的标签和分类 使用代码块时指定语言以获得语法高亮 图片建议存放在 static 目录下 后续优化方向 添加评论系统（如 Disqus、Utterances） 配置自定义域名 优化 SEO 设置 添加网站统计 优化图片加载性能 结语 通过 Hugo 和 GitHub Pages 搭建个人博客是一个非常好的选择，它不仅完全免费，而且部署简单，维护方便。希望这篇教程能帮助你快速搭建自己的博客平台。\n如果遇到问题，可以参考：\nHugo 官方文档 PaperMod 主题文档 GitHub Pages 文档 ","permalink":"https://xuyafei.github.io/myblog/posts/tutorial/how-to-build-blog/","summary":"\u003ch2 id=\"引言\"\u003e引言\u003c/h2\u003e\n\u003cp\u003e搭建个人博客是展示自己技术积累、分享知识的好方式。本文将详细介绍如何使用 Hugo 静态网站生成器和 GitHub Pages 来构建一个现代化的个人博客。\u003c/p\u003e\n\u003ch2 id=\"技术栈选择\"\u003e技术栈选择\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e静态网站生成器\u003c/strong\u003e: \u003ca href=\"https://gohugo.io/\"\u003eHugo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e主题\u003c/strong\u003e: \u003ca href=\"https://github.com/adityatelange/hugo-PaperMod\"\u003ePaperMod\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e托管平台\u003c/strong\u003e: \u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e自动部署\u003c/strong\u003e: GitHub Actions\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"详细步骤\"\u003e详细步骤\u003c/h2\u003e\n\u003ch3 id=\"1-环境准备\"\u003e1. 环境准备\u003c/h3\u003e\n\u003cp\u003e首先需要安装以下工具：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eHugo（推荐使用 extended 版本）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e对于 macOS 用户，可以使用 Homebrew 安装：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-创建-hugo-站点\"\u003e2. 创建 Hugo 站点\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 创建新的 Hugo 站点\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site myblog\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecd myblog\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 初始化 Git 仓库\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3-安装主题\"\u003e3. 安装主题\u003c/h3\u003e\n\u003cp\u003e我们选择了 PaperMod 主题，它具有现代的设计风格和丰富的功能：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 添加主题作为 git submodule\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-配置网站\"\u003e4. 配置网站\u003c/h3\u003e\n\u003cp\u003e在根目录创建 \u003ccode\u003econfig.yml\u003c/code\u003e 文件，配置网站的基本信息：\u003c/p\u003e","title":"使用 Hugo 搭建个人博客：从零开始的完整指南"},{"content":"引言 C++ 的引用机制是该语言最强大且独特的特性之一。它不仅提供了一种安全的指针替代方案，还是现代 C++ 中移动语义和完美转发等高级特性的基础。本文将深入探讨 C++ 引用机制的各个方面，从基础概念到高级应用。\n引用的基本概念 什么是引用？ 引用可以看作是一个变量的别名。它在内存中不占用额外空间（在大多数实现中），必须在创建时初始化，并且一旦绑定到一个变量，就不能再引用其他变量。\nint x = 42; int\u0026amp; ref = x; // ref 是 x 的引用 ref = 24; // 修改 ref 就是修改 x 引用 vs 指针 引用和指针有一些重要的区别：\n初始化要求：\nint* ptr; // 合法，可以不初始化 int\u0026amp; ref; // 非法，引用必须初始化 重新赋值：\nint x = 1, y = 2; int* ptr = \u0026amp;x; ptr = \u0026amp;y; // 合法，指针可以指向新的地址 int\u0026amp; ref = x; ref = y; // 这是赋值操作，不是重新引用 空值：\nint* ptr = nullptr; // 合法 int\u0026amp; ref = nullptr; // 非法，引用不能为空 引用的类型 1. 左值引用 最基本的引用类型，用于引用可以取地址的表达式：\nint x = 42; int\u0026amp; ref = x; // 左值引用 // 不能引用字面量 int\u0026amp; ref2 = 42; // 错误！不能引用右值 2. 常量引用 可以引用常量，也可以引用右值：\nconst int\u0026amp; ref = 42; // 合法，可以引用右值 int x = 42; const int\u0026amp; ref2 = x; // 可以引用非常量 3. 右值引用 C++11 引入的新特性，用于支持移动语义：\nint\u0026amp;\u0026amp; rref = 42; // 右值引用 int x = 42; int\u0026amp;\u0026amp; rref2 = x; // 错误！不能绑定到左值 int\u0026amp;\u0026amp; rref3 = std::move(x); // 正确，std::move 将左值转换为右值 引用的常见应用场景 1. 函数参数 // 传值 void byValue(int x) { x = 42; // 不影响原始值 } // 引用传递 void byReference(int\u0026amp; x) { x = 42; // 修改原始值 } // 常量引用，用于大对象 void byConstReference(const std::string\u0026amp; str) { std::cout \u0026lt;\u0026lt; str; // 只读访问，避免拷贝 } 2. 函数返回值 // 返回引用 int\u0026amp; getElement(std::vector\u0026lt;int\u0026gt;\u0026amp; vec, size_t index) { return vec[index]; // 可以修改原始元素 } // 返回常量引用 const std::string\u0026amp; getString() { static std::string str = \u0026#34;Hello\u0026#34;; return str; // 返回静态对象的引用 } 3. 范围 for 循环 std::vector\u0026lt;int\u0026gt; vec = {1, 2, 3, 4, 5}; // 只读访问 for (const int\u0026amp; x : vec) { std::cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } // 修改元素 for (int\u0026amp; x : vec) { x *= 2; } 高级应用 1. 完美转发 使用模板和通用引用（universal reference）实现参数完美转发：\ntemplate\u0026lt;typename T\u0026gt; void wrapper(T\u0026amp;\u0026amp; arg) { // 完美转发参数 foo(std::forward\u0026lt;T\u0026gt;(arg)); } 2. 移动语义 使用右值引用实现高效的资源转移：\nclass MyString { public: // 移动构造函数 MyString(MyString\u0026amp;\u0026amp; other) noexcept { data_ = other.data_; other.data_ = nullptr; } private: char* data_; }; 3. 引用折叠 理解引用折叠规则对于模板编程很重要：\ntemplate\u0026lt;typename T\u0026gt; void foo(T\u0026amp;\u0026amp; x) { // 通用引用 // T\u0026amp; \u0026amp; 折叠为 T\u0026amp; // T\u0026amp; \u0026amp;\u0026amp; 折叠为 T\u0026amp; // T\u0026amp;\u0026amp; \u0026amp; 折叠为 T\u0026amp; // T\u0026amp;\u0026amp; \u0026amp;\u0026amp; 折叠为 T\u0026amp;\u0026amp; } 最佳实践 使用常量引用传递大对象：\nvoid process(const BigObject\u0026amp; obj); // 比传值效率高 避免返回局部变量的引用：\nint\u0026amp; bad() { int x = 42; return x; // 危险！返回局部变量的引用 } 使用右值引用实现移动语义：\nclass MyClass { MyClass(MyClass\u0026amp;\u0026amp; other) noexcept; // 移动构造函数 MyClass\u0026amp; operator=(MyClass\u0026amp;\u0026amp; other) noexcept; // 移动赋值运算符 }; 使用 std::ref 在需要时创建引用包装器：\nvoid foo(int\u0026amp; x); int x = 42; std::thread t(foo, std::ref(x)); // 传递引用给线程 注意事项 不要返回局部变量的引用 确保引用的对象生命周期足够长 使用常量引用来防止意外修改 理解右值引用和移动语义的关系 注意引用折叠规则在模板中的应用 总结 C++ 的引用机制是一个强大的特性，它不仅提供了一种安全的指针替代方案，还是现代 C++ 中许多高级特性的基础。通过合理使用不同类型的引用，我们可以编写出更高效、更安全的代码。\n理解引用机制对于掌握 C++ 至关重要，它不仅涉及基本的语言特性，还与移动语义、完美转发等现代 C++ 特性密切相关。在实际编程中，合理使用引用可以显著提高代码的性能和可维护性。\n参考资料 C++ 标准文档 Effective Modern C++ (Scott Meyers) C++ Templates: The Complete Guide ","permalink":"https://xuyafei.github.io/myblog/posts/programming/cpp-references/","summary":"\u003ch2 id=\"引言\"\u003e引言\u003c/h2\u003e\n\u003cp\u003eC++ 的引用机制是该语言最强大且独特的特性之一。它不仅提供了一种安全的指针替代方案，还是现代 C++ 中移动语义和完美转发等高级特性的基础。本文将深入探讨 C++ 引用机制的各个方面，从基础概念到高级应用。\u003c/p\u003e\n\u003ch2 id=\"引用的基本概念\"\u003e引用的基本概念\u003c/h2\u003e\n\u003ch3 id=\"什么是引用\"\u003e什么是引用？\u003c/h3\u003e\n\u003cp\u003e引用可以看作是一个变量的别名。它在内存中不占用额外空间（在大多数实现中），必须在创建时初始化，并且一旦绑定到一个变量，就不能再引用其他变量。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e x \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e42\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e ref \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e x;  \u003cspan style=\"color:#75715e\"\u003e// ref 是 x 的引用\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003eref \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e24\u003c/span\u003e;      \u003cspan style=\"color:#75715e\"\u003e// 修改 ref 就是修改 x\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"引用-vs-指针\"\u003e引用 vs 指针\u003c/h3\u003e\n\u003cp\u003e引用和指针有一些重要的区别：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e初始化要求\u003c/strong\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e ptr;     \u003cspan style=\"color:#75715e\"\u003e// 合法，可以不初始化\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e ref;     \u003cspan style=\"color:#75715e\"\u003e// 非法，引用必须初始化\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e重新赋值\u003c/strong\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e x \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, y \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e ptr \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003ex;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eptr \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003ey;      \u003cspan style=\"color:#75715e\"\u003e// 合法，指针可以指向新的地址\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e ref \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e x;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eref \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e y;       \u003cspan style=\"color:#75715e\"\u003e// 这是赋值操作，不是重新引用\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e空值\u003c/strong\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e ptr \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enullptr\u003c/span\u003e;  \u003cspan style=\"color:#75715e\"\u003e// 合法\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e ref \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enullptr\u003c/span\u003e;  \u003cspan style=\"color:#75715e\"\u003e// 非法，引用不能为空\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"引用的类型\"\u003e引用的类型\u003c/h2\u003e\n\u003ch3 id=\"1-左值引用\"\u003e1. 左值引用\u003c/h3\u003e\n\u003cp\u003e最基本的引用类型，用于引用可以取地址的表达式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e x \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e42\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e ref \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e x;  \u003cspan style=\"color:#75715e\"\u003e// 左值引用\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// 不能引用字面量\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e ref2 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e42\u003c/span\u003e;  \u003cspan style=\"color:#75715e\"\u003e// 错误！不能引用右值\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-常量引用\"\u003e2. 常量引用\u003c/h3\u003e\n\u003cp\u003e可以引用常量，也可以引用右值：\u003c/p\u003e","title":"C++ 引用详解：从基础到高级应用"},{"content":"1. 偏导数（Partial Derivative） 定义 偏导数是多元函数对某一个自变量的导数，表示当其他自变量固定时，函数沿该方向的变化率。\n通俗解释 想象你站在一个山坡上（函数 $f(x,y)$ 表示海拔）：\n对 $x$ 的偏导数（$\\frac{\\partial f}{\\partial x}$）是仅沿东西方向移动时的坡度。 对 $y$ 的偏导数（$\\frac{\\partial f}{\\partial y}$）是仅沿南北方向的坡度。 数学形式 对于函数 $f(x_1, x_2, \\dots, x_n)$：\n$$ \\frac{\\partial f}{\\partial x_i} = \\lim_{h \\to 0} \\frac{f(x_1, \\dots, x_i + h, \\dots, x_n) - f(x_1, \\dots, x_n)}{h} $$\n例子 设 $f(x,y) = x^2 + 3xy$：\n$\\frac{\\partial f}{\\partial x} = 2x + 3y$ （视 $y$ 为常数） $\\frac{\\partial f}{\\partial y} = 3x$ （视 $x$ 为常数） 2. 梯度（Gradient） 定义 梯度是一个向量，由函数在所有自变量上的偏导数组成，指向函数值增长最快的方向。\n通俗解释 梯度是山坡上\u0026quot;最陡的上坡方向\u0026quot;。 梯度的大小表示该方向的陡峭程度。 数学形式 对于 $f(x_1, x_2, \\dots, x_n)$，梯度记作 $\\nabla f$：\n$$ \\nabla f = \\left( \\frac{\\partial f}{\\partial x_1}, \\frac{\\partial f}{\\partial x_2}, \\dots, \\frac{\\partial f}{\\partial x_n} \\right) $$\n例子 继续用 $f(x,y) = x^2 + 3xy$：\n$$ \\nabla f = \\left( 2x + 3y, 3x \\right) $$\n在点 $(1, 2)$ 处的梯度为 $\\nabla f = (8, 3)$，表示从该点出发，沿方向 $(8, 3)$ 函数值增长最快。\n3. 关键点总结 偏导数：单一方向的变化率，其他变量固定。 梯度： 是所有偏导数的向量组合。 方向指向函数值最大增长方向。 在优化中，负梯度方向是函数值下降最快的方向。 4. 几何意义 梯度方向：函数增长最快的方向。 梯度大小：变化率的强度（越陡峭，梯度越大）。 等高线：梯度与等高线垂直。 5. 应用场景 机器学习：梯度下降法通过沿负梯度方向更新参数。 物理学：电势的梯度是电场强度。 工程优化：寻找多维函数的最优解。 注：本文使用 KaTeX 渲染数学公式，确保最佳显示效果。\n","permalink":"https://xuyafei.github.io/myblog/posts/mathematics/partial-derivatives-and-gradients/","summary":"\u003ch2 id=\"1-偏导数partial-derivative\"\u003e1. 偏导数（Partial Derivative）\u003c/h2\u003e\n\u003ch3 id=\"定义\"\u003e定义\u003c/h3\u003e\n\u003cp\u003e偏导数是多元函数对\u003cstrong\u003e某一个自变量\u003c/strong\u003e的导数，表示当其他自变量固定时，函数沿该方向的变化率。\u003c/p\u003e\n\u003ch3 id=\"通俗解释\"\u003e通俗解释\u003c/h3\u003e\n\u003cp\u003e想象你站在一个山坡上（函数 $f(x,y)$ 表示海拔）：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对 $x$ 的偏导数（$\\frac{\\partial f}{\\partial x}$）是\u003cstrong\u003e仅沿东西方向\u003c/strong\u003e移动时的坡度。\u003c/li\u003e\n\u003cli\u003e对 $y$ 的偏导数（$\\frac{\\partial f}{\\partial y}$）是\u003cstrong\u003e仅沿南北方向\u003c/strong\u003e的坡度。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"数学形式\"\u003e数学形式\u003c/h3\u003e\n\u003cp\u003e对于函数 $f(x_1, x_2, \\dots, x_n)$：\u003c/p\u003e\n\u003cp\u003e$$\n\\frac{\\partial f}{\\partial x_i} = \\lim_{h \\to 0} \\frac{f(x_1, \\dots, x_i + h, \\dots, x_n) - f(x_1, \\dots, x_n)}{h}\n$$\u003c/p\u003e\n\u003ch3 id=\"例子\"\u003e例子\u003c/h3\u003e\n\u003cp\u003e设 $f(x,y) = x^2 + 3xy$：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e$\\frac{\\partial f}{\\partial x} = 2x + 3y$ （视 $y$ 为常数）\u003c/li\u003e\n\u003cli\u003e$\\frac{\\partial f}{\\partial y} = 3x$ （视 $x$ 为常数）\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"2-梯度gradient\"\u003e2. 梯度（Gradient）\u003c/h2\u003e\n\u003ch3 id=\"定义-1\"\u003e定义\u003c/h3\u003e\n\u003cp\u003e梯度是一个向量，由函数在所有自变量上的偏导数组成，指向函数值\u003cstrong\u003e增长最快\u003c/strong\u003e的方向。\u003c/p\u003e","title":"偏导数与梯度的概念详解"},{"content":"Welcome to My Blog! This is my first blog post using Hugo and the PaperMod theme. I\u0026rsquo;m excited to start sharing my thoughts and experiences here.\nWhat to Expect In this blog, I plan to write about:\nTechnology Software Development Personal Projects Learning Experiences Stay tuned for more content!\n","permalink":"https://xuyafei.github.io/myblog/posts/tutorial/my-first-post/","summary":"\u003ch2 id=\"welcome-to-my-blog\"\u003eWelcome to My Blog!\u003c/h2\u003e\n\u003cp\u003eThis is my first blog post using Hugo and the PaperMod theme. I\u0026rsquo;m excited to start sharing my thoughts and experiences here.\u003c/p\u003e\n\u003ch3 id=\"what-to-expect\"\u003eWhat to Expect\u003c/h3\u003e\n\u003cp\u003eIn this blog, I plan to write about:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eTechnology\u003c/li\u003e\n\u003cli\u003eSoftware Development\u003c/li\u003e\n\u003cli\u003ePersonal Projects\u003c/li\u003e\n\u003cli\u003eLearning Experiences\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eStay tuned for more content!\u003c/p\u003e","title":"我的第一篇博客文章"},{"content":"About Me Hello! I\u0026rsquo;m a software developer passionate about technology and continuous learning. This blog is my platform to share knowledge, experiences, and thoughts about software development and technology.\nMy Skills Programming Languages: [Your Skills] Frameworks: [Your Skills] Tools: [Your Skills] Contact Me Feel free to reach out to me through:\nGitHub: [Your GitHub] LinkedIn: [Your LinkedIn] Email: [Your Email] About This Blog This blog is built with Hugo using the PaperMod theme. Here, I\u0026rsquo;ll be sharing:\nTechnical tutorials Project experiences Learning resources Tech insights Thank you for visiting!\n","permalink":"https://xuyafei.github.io/myblog/about/","summary":"\u003ch2 id=\"about-me\"\u003eAbout Me\u003c/h2\u003e\n\u003cp\u003eHello! I\u0026rsquo;m a software developer passionate about technology and continuous learning. This blog is my platform to share knowledge, experiences, and thoughts about software development and technology.\u003c/p\u003e\n\u003ch3 id=\"my-skills\"\u003eMy Skills\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eProgramming Languages: [Your Skills]\u003c/li\u003e\n\u003cli\u003eFrameworks: [Your Skills]\u003c/li\u003e\n\u003cli\u003eTools: [Your Skills]\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"contact-me\"\u003eContact Me\u003c/h3\u003e\n\u003cp\u003eFeel free to reach out to me through:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGitHub: [Your GitHub]\u003c/li\u003e\n\u003cli\u003eLinkedIn: [Your LinkedIn]\u003c/li\u003e\n\u003cli\u003eEmail: [Your Email]\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"about-this-blog\"\u003eAbout This Blog\u003c/h3\u003e\n\u003cp\u003eThis blog is built with Hugo using the PaperMod theme. Here, I\u0026rsquo;ll be sharing:\u003c/p\u003e","title":"About Me"}]